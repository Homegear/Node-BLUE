var homegear = require("@homegear/homegear-nodejs");
var Log;
var events;
var socketPath = '';
var ready = false;
var hg = null;

class Homegear {
    constructor() {
        ready = false;
        hg = new homegear.Homegear(socketPath, this.connected, this.disconnected, null, this.nodeInput)
    }

    get() {
        return hg;
    }

    connected() {
        Log.info("Connected to Homegear.");
        try {
            if (ready) hg.invoke("noderedEvent", ["global", "isReady"]);
        } catch (e) {
            console.log(e);
        }
    }

    disconnected() {
        Log.info("Disconnected from Homegear. Closing process.");
        process.exit(0);
    }

    nodeInput(nodeId, nodeInfo, inputIndex, message, synchronous) {
        events.emit("homegear-event", {id:"node-input",payload:{nodeId: nodeId, message: message, synchronous: synchronous}});
    }

    isReady() {
        try {
            ready = true;
            if (hg.connected()) hg.invoke("noderedEvent", ["global", "isReady"]);
        } catch (e) {
            console.log(e);
        }
    }
}

module.exports = {
    init: function(runtime) {
        Log = runtime.log;
        events = runtime.events;
        socketPath = runtime.settings.homegearSocketPath || '';
    },
    create: function() {
        return new Homegear();
    },
    Homegear: Homegear
}